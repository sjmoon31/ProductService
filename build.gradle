plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// 시큐리티
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.security:spring-security-crypto'
	// OAuth2
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// QueryDSL 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//implementation 'org.springframework.cloud:spring-cloud-starter-config'
	//implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	//implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	//implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	//implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.5'
	//implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE'
	//implementation 'io.micrometer:micrometer-registry-prometheus'
}

test {
	useJUnitPlatform()
}

querydsl {
	jpa = true
	querydslSourcesDir = file('src/main/generated/querydsl')
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated/querydsl']
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = file('./src/main/generated')
}